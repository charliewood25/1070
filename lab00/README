
The step-by-step instructions for the lab are below.

For some problems, you'll be entering Python code 
into the Python interpreter.  Recall that you start
the interpreter from the command line as follows:

$ python
...
>>>


For some problems, you'll be reading the programs I've
provided in this directory, running them, and making 
changes.  You'll want to open these files and modify
them using your favorite text editor (vi, emacs, nano,
or whatever you've chosen).

To run a program that's saved in a file "foo.py",
you enter this at the command line:

$ python foo.py

(1) We've seen already that you can loop over a list of numbers
as follows:

numbers = [5,1,2,7,8]
for x in numbers:
  # do something!
  
Sometimes, you want to loop over a bunch of numbers
(from 1 to 100, say) buy you don't happen to 
have those stored in a list object.  Python has a
function called "range" that lets you build lists
of numbers. 

Open the Python interpreter and try the following commands:

>>> range(10)

>>> range(1,11)

>>> range(0,50,5)

>>> range(20,15,-1)

Now use "range" to create a list containing the odd numbers
between 3 and 15, inclusive.

(2) Open the file sum.py (in this directory) using a text editor
 and study the code.  Can you figure out what it's intended to do?
Can you predict the output before you run it?

Quit the editor and return to the command line.  Run the code:

$ python sum.py

Then modify the program to add the numbers from 1 to 100, save it,
and run it.

(3) The factorial of a positive whole number n is defined to be
the product of the whole numbers from 1 to n:
n*(n-1)*(n-2)*...3*2*1. 

Copy the program sum.py to a new file factorial.py:

$ cp sum.py factorial.py

Then open factorial.py and change it so that it computes the
factorial of a number of your choosing.  Test it thoroughly.
Does it work for the factorial of 1?  Factorial of 0? (defined to be 1)
Will it compute the factorial of a big number, like 50 or 100?

(4) This is a big data course, and that means we'll need to read
data files in our Python programs.  

I've placed the 30x30 grid of movie ratings we used the first day
of class in the file ratings-training.csv.

Now open the program netflix.py. 

The first five lines open and read in the file.
Python generally reads files line-by-line - that's the loop you see.
Inside the loop, we "split" a row on the commas to get
the individual entries.  After reading in the file, you can 
access the rating at row r and column c as ratings[r][c]

The second half of the program computes the average of the
scores in row 11.  Note that it's tricky because we need to
deal with the - and ? entries somehow.  We use an "if" statement
(sometimes called a "conditional") to check for those and 
ignore them.

Run the program to compute the average.

Then see if you can modify the program to compute
the average of *column* 11.

If that's too easy, see if you can compute the average of
all scores in the entire grid.
